backend_associative_category_has_product_index:
    path: /
    methods: [GET]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:indexAction
        _tianos:
            action: index
            section: admin
            permission: true
            template: OneToManyBundle::index.html.twig
            vars:
                subheader: sylius.ui.manage_your_category_catalog
                icon: cube
                body_css: one-to-many-body-css
                serialize_group_name: one-to-many
            one_to_many:
                box:
                    icon: exchange
                    class: primary
                    form_name: main-form
                    title: Category has Product
                    route_info: backend_associative_category_has_product_info
                box_left:
                    icon: user-secret
                    class: primary
                    id: box-left-id
                    title: Category
                    li_class: box-left-li
                    li_badge_class: bg-blue
                    li_input_name: box-lefts-selected-value
                    search_input_name: search-input-name-left
                    route_search: backend_associative_category_has_product_boxleft_search
                    route_select_item: backend_associative_category_has_product_boxleft_select_item
                box_right:
                    icon: expeditedssl
                    class: primary
                    id: box-right-id
                    title: Product
                    li_class: box-right-li
                    li_badge_class: bg-orange-active
                    li_input_name: box-right-selected-value
                    search_input_name: search-input-name-right
                    route_search: backend_associative_category_has_product_boxright_search
                    route_select_item: backend_associative_category_has_product_boxright_select_item
            form:
                type: Bundle\CategoryBundle\Form\Type\CategoryType
            repository:
                box_left:
                    service: tianos.repository.category
                    method: findAllOffsetLimit
                    arguments:
                        limit: 20
                box_right:
                    service: tianos.repository.product
                    method: findAllOffsetLimit
                    arguments:
                        limit: 20

backend_associative_category_has_product_boxleft_search:
    path: /boxleft-search
    methods: [POST]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:boxLeftSearchAction
        _tianos:
            action: left_search
            template: OneToManyBundle:Li:box_left.html.twig
            vars:
                serialize_group_name: one-to-many
            one_to_many:
                box_left:
#                    icon: user-secret
#                    class: primary
#                    id: box-left-id
#                    title: category
                    li_class: box-left-li
                    li_badge_class: bg-blue
                    li_input_name: box-lefts-selected-value
                    search_input_name: search-input-name-left
#                    route_search: backend_associative_category_has_role_boxleft_search
            repository:
                box_left:
                    service: tianos.repository.category
                    method: searchBoxLeft
                    arguments:
                        limit: 20
#            entity: Bundle\ProfileBundle\Entity\Profile
#            form:
#                type: Bundle\ProfileBundle\Form\Type\ProfileType

backend_associative_category_has_product_boxright_search:
    path: /boxright-search
    methods: [POST]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:boxRightSearchAction
        _tianos:
            action: right_search
            template: OneToManyBundle:Li:box_right.html.twig
            vars:
                serialize_group_name: one-to-many
            one_to_many:
                box_right:
#                    icon: user-secret
#                    class: primary
#                    id: box-right-id
#                    title: category
                    li_class: box-right-li
                    li_badge_class: bg-blue
                    li_input_name: box-lefts-selected-value
                    search_input_name: search-input-name-left
#                    route_search: backend_associative_category_has_role_boxleft_search
            repository:
                box_right:
                    service: tianos.repository.product
                    method: searchBoxRight
                    arguments:
                        limit: 20
#            entity: Bundle\ProfileBundle\Entity\Profile
#            form:
#                type: Bundle\ProfileBundle\Form\Type\ProfileType

backend_associative_category_has_product_boxright_select_item:
    path: /boxright-select-item
    methods: [POST]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:boxRightSelectItemAction
        _tianos:
            repository:
                box_left:
                    service: tianos.repository.category
                    method: find
                    method_delete_associative: deleteAssociativeTableById
                box_right:
                    service: tianos.repository.product
                    method: find
#                    arguments:
#                        limit: 20
#            action: info
#            template: ProfileBundle:ProfileBackend/Informative:infoProfileHasRole.html.twig

backend_associative_category_has_product_boxleft_select_item:
    path: /boxleft-select-item
    methods: [POST]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:boxLeftSelectItemAction
        _tianos:
            template: OneToManyBundle:Li:box_right.html.twig
            vars:
                serialize_group_name: one-to-many
            one_to_many:
                box_right:
                    icon: expeditedssl
                    class: primary
                    id: box-right-id
                    title: Product
                    entity: product
                    li_class: box-right-li
                    li_badge_class: bg-orange-active
                    li_input_name: box-right-selected-value
                    search_input_name: search-input-name-right
#                    route_search: backend_associative_profile_has_role_boxright_search
#                    route_select_item: backend_associative_profile_has_role_boxright_select_item
            repository:
                box_left:
                    service: tianos.repository.category
                    method: find
#                    method_delete_associative: deleteAssociativeTableById
                box_right:
                    service: tianos.repository.product
                    method: find
#                    arguments:
#                        limit: 20
#            action: info
#            template: ProfileBundle:ProfileBackend/Informative:infoProfileHasRole.html.twig

backend_associative_category_has_product_info:
    path: /info
    methods: [POST]
    defaults:
        _controller: tianos.categoryhasproduct.controller.associative:infoAction
        _tianos:
            action: info
            template: AssociativeBundle:CategoryHasProduct/Informative:info.html.twig











#backend_profile_has_role_edit:
#    path: /edit
#    methods: [PUT, POST]
#    defaults:
#        _controller: tianos.profilehasrole.controller.profile:editAction
#        _tianos:
#            action: edit
#            template: ProfileBundle:ProfileBackend/Form:form.html.twig
#            repository:
#                service: tianos.repository.profile
#                method: find
#                arguments: [$profileId]
#            form:
#                type: Bundle\ProfileBundle\Form\Type\ProfileType
#            vars:
#                serialize_group_name: crud
#
#backend_profile_has_role_delete:
#    path: /delete
#    methods: [POST, DELETE]
#    defaults:
#        _controller: tianos.profilehasrole.controller.profile:deleteAction
#        _tianos:
#            action: delete
#            template: GridBundle:Template:delete.html.twig
#            repository:
#                service: tianos.repository.profile
#                method: find
#                arguments: [$profileId]
#            vars:
##                body_css: grid-body-css
#
#backend_profile_has_role_view:
#    path: /view
#    methods: [POST]
#    defaults:
#        _controller: tianos.profilehasrole.controller.profile:viewAction
#        _tianos:
#            action: view
#            template: ProfileBundle:ProfileBackend/Informative:view.html.twig
#            repository:
#                service: tianos.repository.profile
#                method: find
#                arguments: [$profileId]


