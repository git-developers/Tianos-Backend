services:

#    tianos.listener.doctrine.report:
#        class: Bundle\ReportBundle\EventListener\DoctrineListenerService
#        arguments: ["@security.token_storage"]
#        tags:
#          - { name: doctrine.event_listener, event: postUpdate }
#          - { name: doctrine.event_listener, event: preUpdate }
#          - { name: doctrine.event_listener, event: prePersist }
#          - { name: doctrine.event_listener, event: postLoad }
#          - { name: doctrine.event_listener, event: postRemove }

    tianos.api.controller.report:
        class: Bundle\ReportBundle\Controller\ApiController
        arguments: [ Bundle\GridBundle\Factory\RequestConfigurationFactoryInterface ]
        tags:
            - { name: tianos.api.controller.report, alias: tianos.api.controller.report }

    tianos.backend.controller.report:
        class: Bundle\ReportBundle\Controller\BackendController
        arguments: [ Bundle\GridBundle\Factory\RequestConfigurationFactoryInterface ]
        tags:
            - { name: tianos.backend.controller.report, alias: tianos.backend.controller.report }

    tianos.frontend.controller.report:
        class: Bundle\ReportBundle\Controller\FrontendController
        arguments: [ Bundle\GridBundle\Factory\RequestConfigurationFactoryInterface ]
        tags:
            - { name: tianos.frontend.controller.report, alias: tianos.frontend.controller.report }

#    tianos.repository.report:
#        class: Dummy
#        factory: ['@doctrine.orm.entity_manager', getRepository]
#        arguments: [ Bundle\ReportBundle\Entity\Report ]



#    tianos.controller.grid:
#        class: Bundle\GridBundle\Controller\GridController
#        arguments: [ Bundle\GridBundle\Controller\RequestConfigurationFactoryInterface ]
#        tags:
#            - { name: tianos.controller.grid, alias: tianos.controller.grid }