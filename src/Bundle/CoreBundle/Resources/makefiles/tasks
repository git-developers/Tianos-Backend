
NOW := $(shell /bin/date "+%Y-%m-%d . %H:%M:%S")
AUTHOR_EMAIL := "jafeth.bendezu@avantica.net"
AUTHOR_NAME := "Jafeth"
HOST_PROJECT := tianos.com
DATABASE_NAME := tianos

delete:
	@echo ---;
	@echo Borrando los folderes cache y logs;
	rm -rf var/logs/*
	rm -rf var/cache/*
	rm -rf web/bundles/*
	rm -rf web/media/*
	@echo ---;
	@echo ===========borrar los tokens de google===========;
	rm -rf /tianos/data/google/credentials/*
	@echo ---;

perm:
	@echo ---;
	@echo se dara permisos a los folderes cache y logs;
	chmod 0777 -R var/cache var/logs var/sessions $$PWD/app/DoctrineMigrations
	@echo ---;

assets:
	$(eval ENV := dev)
	$(eval DEBUG := )
ifeq ($(env), prod)
	$(eval ENV := prod)
	$(eval DEBUG := --no-debug)
endif

	make delete
	php bin/console cache:clear --env=$(ENV) $(DEBUG);
	php bin/console assets:install --symlink --env=$(ENV) $(DEBUG);
	php bin/console assetic:dump --env=$(ENV) $(DEBUG);
	make perm

save:
	git add .
	git config --global user.email $(AUTHOR_EMAIL)
	git config --global user.name $(AUTHOR_NAME) --replace-all
	git commit -m "Tianos said -> modifications made on: $(NOW)"
ifeq ($(http), 1)
	git push origin_http master
else
	git push origin master
endif

#READ: https://eole-io.github.io/sandstone/install-zmq-php-linux.html
websocket:
	$(eval DEBUG := --debug)
ifeq ($(env), prod)
	$(eval DEBUG := --no-debug)
endif
	php bin/console gos:websocket:server --host=$(HOST_PROJECT) --port:8080 $(DEBUG);

doctrine_update:
	php bin/console doctrine:migration:status
	php bin/console doctrine:migration:diff

#entity_update:
	#php bin/console doctrine:mapping:import --force CoreBundle yml --filter="$(entity)"
	#php bin/console doctrine:mapping:convert annotation ./src --force
	#php bin/console doctrine:generate:entities CoreBundle:$(entity) --no-backup

sql:
	php bin/console doctrine:query:sql "$(query)"

routing:
	php bin/console tianos:crud:routing BackendBundle

lift_up2:
	sudo service httpd start;
	sudo service httpd restart;
	sudo setenforce 0

lift_up:
	@echo Domain: $(HOST_PROJECT)
	make ssh
	make nginx
	make hosts
	make restart_services
	#make websocket

mysql:
	$(eval DB := $(DATABASE_NAME))
ifeq ($(db), false)
	$(eval DB := '')
endif
	mysql -h localhost -u root -proot $(DB)

db_load:
	make migrate_delete
	php bin/console doctrine:database:drop --force --if-exists
	php bin/console doctrine:database:create --if-not-exists
	php bin/console doctrine:migration:diff
	php bin/console doctrine:migration:migrate --no-interaction
	make load_fixture
	make perm

log_nginx:
ifeq ($(clean), 1)
	> /var/log/nginx/tianos_error.log
	@echo = se borro el log con exito!;
	@echo -;
else
	tail -n $(n) /var/log/nginx/tianos_error.log
endif

nginx:
	@echo ---;
	@echo ===========se copiara la configuracion del NGINX===========;
	cp /tianos/app/config/docker/nginx.conf.dist /etc/nginx/sites-enabled/tianos-nginx
	@echo ---;
	@echo ===========validando el sintax de la configuracion del NGINX===========;
	nginx -t
	@echo ---;
	@echo ===========reiniciando servicio NGINX===========;
	service nginx restart
	@echo ---;

hosts:
	@echo ---;
	@echo ===========se copiara la configuracion del HOSTS===========;
	cp /tianos/app/config/docker/hosts.dist /etc/hosts
	@echo ---;

ssh:
	@echo ---;
	@echo ===========se copiara el KEY SSH===========;
	mkdir -p ~/.ssh/
	cp /tianos/app/config/docker/jafeth-xalok ~/.ssh/jafeth-xalok
	@echo ---;

restart_services:
	@echo ---;
	@echo ===========se reiniciara los servicios===========;
	service --status-all
	service nginx restart
	service mysql restart
	service php7.1-fpm stop
	service php7.1-fpm start
	@echo ---;

step_1_mysql_permissions:
	@echo ---;
	@echo ===========cambiando permisos===========;
	chown -Rv mysql:root /var/run/mysqld/
	chgrp -Rv mysql /var/run/mysqld/
	chown -Rv mysql:mysql /var/lib/mysql
	chgrp -Rv mysql /var/lib/mysql
	chown -Rv mysql:mysql /etc/mysql/
	chgrp -Rv mysql /etc/mysql/

step_2_init_msql:
	@echo ---;
	@echo ===========INIT MYSQL===========;
	@echo ---;
	@echo ===========borrando el contenido del library mysql===========;
	rm -rf /var/lib/mysql/*
	@echo ---;
	@echo ===========inicializando===========;
	mysqld --initialize --user=mysql --datadir=/var/lib/mysql/
	service mysql start
	@echo ---;
	@echo ===========mostrando el log, se hace esto para mostrar el password temporal===========;
	> /var/log/mysql/error.log
	tail -n 70 /var/log/mysql/error.log
	@echo ---;
	@echo ===========ingrese el password temporal que se encuentra en el log===========;
	mysql -u root -p
	#dentro de mysql, ejecutar: ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';

load_fixture:
	php bin/console tianos:truncate:tables
	php bin/console doctrine:fixtures:load --no-interaction

setfacl:
	HTTPDUSER=$$(ps axo user,comm | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d\  -f1)
	setfacl -dR -m u:"$$HTTPDUSER":rwX -m u:$(whoami):rwX var
	setfacl -R -m u:"$$HTTPDUSER":rwX -m u:$(whoami):rwX var

crud_routing:
	php bin/console tianos:crud:routing BackendBundle

gato:
	@echo =========== CRUD: replace dummy 2222 ===========;
	$(eval MODEL := $(model) | tr '[:upper:]' '[:lower:]' | python -c "print raw_input().capitalize()" )
	@echo $(MODEL)

xxxx:
	$(eval MODEL_UPPER := php bin/console tianos:capitalized $(model))
	$(eval DUMMY_UPPER := DUMMY_UPPER)

	mv $$PWD/src/Bundle/$(DUMMY_UPPER)Bundle $$PWD/src/Bundle/$(MODEL_UPPER)Bundle

crud2:
	@echo =========== CRUD: replace dummy ===========;
	@echo ;
	read -r -p "Are you sure? [y/N] " response;
	if [ -s ${response} == "y" ];
	then
	    @echo =========== 11111111111 ===========;
	else
	    @echo =========== 2222222222 ===========;
	fi

crud:
	@echo =========== CRUD: replace dummy ===========;
	php bin/console tianos:create:crud $(model)
	make perm

migrate_delete:
	@echo =========== Migrations: delete all ===========;
	rm -rf $$PWD/app/DoctrineMigrations


