backend_ticket_index:
    path: /
    methods: [GET]
    defaults:
        _controller: tianos.backend.controller.ticket:indexAction
        _tianos:
            action: index
            section: admin
            permission: true
            template: GridBundle::index.html.twig
            vars:
                subheader: sylius.ui.manage_your_ticket_catalog
                icon: cube
                body_css: grid-body-css
                serialize_group_name: crud
#            grid: sylius_admin_product
            grid:
                icon: cube
                box_class: primary
                title: Gestionar ticket
                data_table:
                    route:
                        info: backend_ticket_info
                        view: backend_ticket_view
                        edit: backend_ticket_edit
                        create: backend_ticket_create
                        delete: backend_ticket_delete
                    table_button:
                        - edit
                        - delete
                    table_button_header:
#                        - create
                        - info
                    table_option:
                        pageLength: 10
                    row_call_back:
                        - key: id
                          value: aData.id
                        - key: data-id
                          value: aData.id
                        - key: class
                          value: "'alert'"
                    columns:
                        - name: '#'
                          obj: " '<span class=\"badge bg-blue\">' + obj.id + '</span>' "
                        - name: Name
                          obj: obj.name
                        - name: Creado
                          obj: obj.created_at
                          options:
                              icon: calendar
            form:
                type: Bundle\TicketBundle\Form\Type\TicketType
            repository:
                service: tianos.repository.ticket
                method: findAll
                arguments: [$ticketId]
                vars:
                    serialize_group_name: crud

backend_ticket_create:
    path: /create
    methods: [GET, POST]
    defaults:
        _controller: tianos.backend.controller.ticket:createAction
        _tianos:
            action: create
            template: TicketBundle:BackendTicket/Grid:create.html.twig
            vars:
                body_css: grid-body-css
                serialize_group_name: crud
            entity: Bundle\TicketBundle\Entity\Ticket
            form:
                type: Bundle\TicketBundle\Form\Type\TicketType
            repository:
                vars:
                    serialize_group_name: crud

backend_ticket_add_client:
    path: /add-cliente
    methods: [PUT, POST]
    defaults:
        _controller: tianos.backend.controller.ticket:addClienteAction
        _tianos:
            action: create
            template: TicketBundle:BackendTicket/Modal/Client:data.html.twig
            vars:
                body_css: grid-body-css
                serialize_group_name: crud
            entity: Bundle\TicketBundle\Entity\Client
            form:
                type: Bundle\TicketBundle\Form\Type\ClientType
            repository:
                vars:
                    serialize_group_name: crud

backend_ticket_add_employee:
    path: /add-employee
    methods: [PUT, POST]
    defaults:
        _controller: tianos.backend.controller.ticket:addEmployeeAction
        _tianos:
            action: create
            template: TicketBundle:BackendTicket/Modal/Employee:data.html.twig
            vars:
                body_css: grid-body-css
                serialize_group_name: crud
            entity: Bundle\TicketBundle\Entity\Employee
            form:
                type: Bundle\TicketBundle\Form\Type\EmployeeType
            repository:
                vars:
                    serialize_group_name: crud

backend_ticket_add_service:
    path: /add-service
    methods: [PUT, POST]
    defaults:
        _controller: tianos.backend.controller.ticket:addServiceAction
        _tianos:
            action: create
            template: TicketBundle:BackendTicket/Modal/Service:data.html.twig
            vars:
                body_css: grid-body-css
                serialize_group_name: crud
            tree:
                icon: file-text-o
                box_class: primary
                title: Gestionar servicios
                main_div: box-main-div
                main_ul: box-main-ul
                child_ul: box-child-ul
                li_span: li-span
#                route:
#                    info: backend_category_tree_info
#                    view: backend_category_tree_view
            entity: Bundle\TicketBundle\Entity\Service
            form:
                type: Bundle\TicketBundle\Form\Type\ServiceType
            repository:
                vars:
                    serialize_group_name: crud



#backend_ticket_edit:
#    path: /edit
#    methods: [PUT, POST]
#    defaults:
#        _controller: tianos.backend.controller.ticket:editAction
#        _tianos:
#            action: edit
#            template: TicketBundle:BackendTicket/Form:form.html.twig
#            form:
#                type: Bundle\TicketBundle\Form\Type\TicketType
#            repository:
#                service: tianos.repository.ticket
#                method: find
#                arguments: [$ticketId]
#                vars:
#                    serialize_group_name: crud

#backend_ticket_delete:
#    path: /delete
#    methods: [POST, DELETE]
#    defaults:
#        _controller: tianos.backend.controller.ticket:deleteAction
#        _tianos:
#            action: delete
#            template: GridBundle:Template:delete.html.twig
#            repository:
#                service: tianos.repository.ticket
#                method: find
#                arguments: [$ticketId]
#            vars:
##                body_css: grid-body-css

backend_ticket_view:
    path: /view
    methods: [POST]
    defaults:
        _controller: tianos.backend.controller.ticket:viewAction
        _tianos:
            action: view
            template: TicketBundle:BackendTicket/Informative:view.html.twig
            repository:
                service: tianos.repository.ticket
                method: find
                arguments: [$ticketId]
                vars:
                    serialize_group_name: crud

backend_ticket_info:
    path: /info
    methods: [POST]
    defaults:
        _controller: tianos.backend.controller.ticket:infoAction
        _tianos:
            action: info
            template: TicketBundle:BackendTicket/Informative:info.html.twig





#/var/www/html/Sylius/sylius/vendor/sylius/sylius/docs/customization/factory.rst
#
#    sylius_admin_product_create_simple:
#        path: /products/new/simple
#        methods: [GET, POST]
#        defaults:
#            _controller: sylius.controller.product:createAction
#            _sylius:
#                section: admin
#                factory:
#                    method: createDisabled # like here for example
#                template: SyliusAdminBundle:Crud:create.html.twig
#                redirect: sylius_admin_product_update
#                vars:
#                    subheader: sylius.ui.manage_your_product_catalog
#                    templates:
#                        form: SyliusAdminBundle:CRUDDUMMY:_form.html.twig
#                    route:
#                        name: sylius_admin_product_create_simple



#            template: "@SyliusAdmin/ProductVariant/generate.html.twig"
#            section: admin
#            permission: true
#            redirect:
#                route: sylius_admin_product_variant_index
#                parameters: { productId: $productId }
#            form:
#                type: Sylius\Bundle\ProductBundle\Form\Type\ProductGenerateVariantsType
#            repository:
#                method: find
#                arguments: [$productId]
#            flash: sylius.product_variant.generate

#sylius_admin_product_index:
#    path: /products/
#    methods: [GET]
#    defaults:
#        _controller: sylius.controller.product:indexAction
#        _sylius:
#            section: admin
#            permission: true
#            grid: sylius_admin_product
#            template: SyliusAdminBundle:CRUDDUMMY:index.html.twig
#            vars:
#                subheader: sylius.ui.manage_your_product_catalog
#                icon: cube
